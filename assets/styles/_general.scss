

//TODO: REFACTOR THE @extend RULES
html { box-sizing: border-box; }

*,
*:before,
*:after { box-sizing: inherit; }

h1,
h2,
h3,
h4,
p,
ul,
ol { margin-top: 0; }


// link to top
#top { display: none; }

// apply this in order to have a gap to the left and right, except on mobile
%container {

  @include bp(small) {
    padding-left: $padding-body;
    padding-right: $padding-body;
  }

  @include bp(medium) {
    padding-left: $padding-body * 2;
    padding-right: $padding-body * 2;
  }
}

// apply this in order to have a gap to the left and right, also on mobile
%container-nav {
  padding-left: $padding-body;
  padding-right: $padding-body;

  @include bp(medium) {
    padding-left: $padding-body * 2;
    padding-right: $padding-body * 2;
  }
}

// apply this to any containing div / section that has content which should not be wider than 66.66em
// further explanation here: http://lea.verou.me/more-css-secrets/#padding-auto
%container-content {
  padding-left: $padding-body;
  padding-right: $padding-body;

// fine-tune here as needed
  @include bp(large) {
    padding-left: calc(50% - 24em);
    padding-right: calc(50% - 24em);
  }

  @include bp(xlarge) {
    padding-left: calc(50% - 30em);
    padding-right: calc(50% - 30em);
  }
}

%container-content--narrow {
  padding-left: $padding-body;
  padding-right: $padding-body;
  @include bp(medium) {
    padding-left: calc(50% - 20em);
    padding-right: calc(50% - 20em);
  }
}

.rw {
  @extend %grid--full;
  @extend %container;
}

.cl {
  padding-left: 0;
  @extend %grid__item;
}

section,
footer {
  @extend %cf;
  padding: $padding-section $padding-body*2;
}

section {
  @include bp(medium) {
    padding-top: $padding-section * 1.5;
    padding-bottom: $padding-section * 1.5;
  }
}

// this is for sections that should not be visually separated as far from the following one,
// e.g. sponsors and media partners.
// alternatively: don't have separate sections at all.
.section--tight { padding-bottom: 0;

  @include bp(medium) { padding-bottom: 0; }
}

.split__text,
.split__media {
  @extend %cf;
  @extend %lap--six-twelfths;
  margin-bottom: $margin-base * 1.5;

  @include bp(medium) { margin-bottom: 0; }
}

.split__text + .split__media,
.split__media + .split__text { margin-bottom: 0; }

.c-conference .split__text,
.c-venue .split__media { padding-left: 0; }


.cssconf-family-list__item {
  margin-right: .625rem;
  display: inline-block;

  &:last-child { margin-right: 0; }

  @include bp(medium) { margin-right: 1.3rem; }
}

.cssconf-family-logo {
  display: inline-block;
  margin-bottom: 2.5rem;
}

// add to sections to add beige background
.c-speakers-home,
.c-thank-you,
.c-cssfamily { @extend %bgc; }

// add to sections to center-align content
.c-speakers,
.c-cssfamily,
.g-thank-you,
.g-sponsors-reel,
.c-call-for-speakers-intro { @extend %tac; }

// Collect all sections that should have a max-width
// c-max-width is the generic non-semantic class
.c-coc,
.c-coc-short,
.c-coc-long,
.c-accessibility,
.c-conference,
.c-speakers,
.c-speaker-detail,
.c-venue,
.c-schedule,
.c-thank-you,
.c-schedule,
.c-max-width { @extend %container-content; }

// Collect all sections that should have a narrow max-width
// works well for longer one-column texts

.c-info,
.c-sponsors,
.c-blog,
.c-diversity,
.c-scholarships,
.c-styleguide,
.c-call-for-speakers-intro,
.c-call-for-speakers-content { @extend %container-content--narrow; }

.c-cssfamily { margin-bottom: $margin-base; }

.c-thank-you { 
  position: relative;
  margin-top: $margin-base;
  margin-bottom: $margin-base * 2;
}

.c-thank-you__svg {
  position: absolute;
  margin: 0 auto;
  left: 0;
  right: 0;
  width: 5rem;
  height: auto;
  top: -2rem;
  fill: $color-blue;

  @include bp(small) {
    width: 6rem;
    top: -2.5rem;
  }

  @include bp(medium) {
    width: 7rem;
    top: -3rem;
  }
}

.c-conference {
  display: flex;
  flex-direction: column;

  @include bp(medium) { display: block; }
}

.c-conference .split__media {
  order: 1;
  margin-bottom: $margin-base * 1.5;
}

.c-conference .split__text {
  order: 2;
}

.margin-special {
  margin-bottom: $margin-base * 2;
}

.blog__post {
  margin-bottom: $margin-base * 3.5;
}
// remove global styling once we have this class everywhere
time,
.blog__time {
  display: block;
  font-size: $font-size-16;
  margin-bottom: $margin-base;
  color: $color-grey;
}

